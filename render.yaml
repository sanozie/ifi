# Render Blueprint spec: https://docs.render.com/blueprint-spec
# This blueprint provisions:
# - Postgres: ifi-store
# - Redis (Key Value): ifi-cache
# - Web (Docker): ifi-api
# - Worker (Docker): ifi-worker
# Notes:
# - DATABASE_URL is wired from the database via fromDatabase.property: connectionString
# - REDIS_URL is wired from the redis service via fromService.property: connectionString
# - API ensures pgvector at startup (CREATE EXTENSION IF NOT EXISTS "vector")

databases:
  - name: ifi-store
    databaseName: ifi
    user: venture
    plan: free
    ipAllowList: [] # Empty array means allow only internal connections

services:
  # API Service (minimal Node runtime, zero-dependency)
  - type: web
    name: ifi-api
    env: node
    plan: free
    autoDeploy: true
    healthCheckPath: /api/health
    buildCommand: echo "no build"
    startCommand: >
      node -e "const http=require('http');const s=http.createServer((req,res)=>{if(req.url==='/api/health'){res.writeHead(200,{ 'Content-Type':'application/json'});res.end(JSON.stringify({status:'ok'}));}else{res.writeHead(200,{ 'Content-Type':'application/json'});res.end(JSON.stringify({message:'IFI API placeholder'}));}});s.listen(process.env.PORT||3000,'0.0.0.0');console.log('HTTP server listening');"

  # Worker Service
  - type: worker
    name: ifi-worker
    env: docker
    dockerfilePath: ./services/worker/Dockerfile
    dockerContext: .
    plan: free
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      # Managed database & redis connections
      - key: DATABASE_URL
        fromDatabase:
          name: ifi-store
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ifi-cache
          property: connectionString
      # Auth - Clerk
      - key: CLERK_PUBLISHABLE_KEY
        sync: false
      - key: CLERK_SECRET_KEY
        sync: false
      - key: CLERK_JWKS_URL
        sync: false
      # AI Providers
      - key: OPENAI_API_KEY
        sync: false
      - key: FIREWORKS_API_KEY
        sync: false
      # GitHub App Integration
      - key: GITHUB_APP_ID
        sync: false
      - key: GITHUB_PRIVATE_KEY
        sync: false
      - key: GITHUB_WEBHOOK_SECRET
        sync: false
      # Notion Integration
      - key: NOTION_TOKEN
        sync: false
      # Codegen Configuration
      - key: CODEGEN_PROVIDER
        value: fireworks
      - key: CODEGEN_PLANNER_MODEL
        value: gpt-5
      - key: CODEGEN_MODEL
        value: accounts/fireworks/models/qwen2.5-coder-32b-instruct
      - key: CODEGEN_MAX_TOKENS
        value: 8192
      - key: CODEGEN_TIMEOUT_MS
        value: 60000
      - key: CODEGEN_COST_CAP_USD
        value: 1.00

  # Redis (managed service)
  - type: redis
    name: ifi-cache
    plan: free
    maxmemoryPolicy: allkeys-lru
    ipAllowList: [] # Empty array means allow only internal connections
